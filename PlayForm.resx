<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="helpPlayTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEACABoBQAAJgAAACAgAAABAAgAqAgAAI4FAAAoAAAAEAAAACAAAAABAAgAAAAAAAAB
        AAAAAAAAAAAAAAABAAAAAQAAAAAAAFtZWABpXUsAl2wJALWHHgC0iyMAv5Y8AMCdRgDUp0MA2LFPAOzP
        kAD036kA9erZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkDBwAAAAAAAAkDBwAAAAAHCwMBAQEBAQEHCwMAAAAABwcEDAwM
        DAwMCAcFAAAAAAABDAIMDAwMDAwBDAEAAAAAAQwMBAYIDAwMAQwMBQMHAAEMDAYKBgICAgECAgcLAwAB
        DAwIBgQMDAwBDAwIBwkAAQwMDAIMDAwMAQwMDAEAAAEMDAwCDAwMDAEMDAwBAAkDBgwMAgwMDAMDCAwM
        AQAHCwMBAQEBAQEHCwMMDAEACQcFDAwCDAwMCAcDDAwBAAAAAAEMAgwMDAwMDAEMAQAAAAAACQMGDAwM
        DAwMBQMFAAAAAAcLAwEBAQEBAQcLAwAAAAAJAwUAAAAAAAAJAwkfjwAAAA8AAAAPAACABwAAgAAAAIAA
        AACAAAAAgAEAAIABAAAAAQAAAAEAAAABAADgAQAA8AAAAPAAAADx+AAAKAAAACAAAABAAAAAAQAIAAAA
        AAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAABqVRQAb14rAG9eLABvYDYAeGc0AHdpPwBbWVUAW1lYAGVj
        YgB5dnIAeXd0AHp4dwCXbAkAgW86AIZ2RACId0QAiXlGAIJ0SwCEdk0AiHhLAIp7TACMfE8AjH5TAI1/
        VgC/iQsAu5YjAMmhJgDOpioA2bAxANqyNwDbtDwApZNaAKCQXQCjk2IApJNiAKSVaACpmWsArJxrAKiZ
        bACrnG4Arp9vAK6gdgCvonkA7s1oAJeUjgCJkJAAkpCQAJaUkACYlZAAmZeXAKegjgCooY8AqKGRAKmj
        lQCppZkAq6egAKuooQCtrKsAv7y1AMW4jgDHuZAA8OS/AOzkyADt5cwA9OjEAPXqyQD168wA9uzOAPbt
        0QD37tUA+O/XAPDq2gD279wA+PDZAPjx3QDz7+EA8u7kAPfy5AD58+AA+vTiAPjz5gD69eUA+/bpAPv3
        7AD7+OwA/PjsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIgEBJwAAAAAAAAAAAAAAAAAAIgEBJwAAAAAAAAAAACEa
        GRkNFTs6Ojo6Ojo6Ojo6OiEaGRkNJwAAAAAAAAAAAR0fGRkBLwgICAgICAgICAgIAR0fGRkBAAAAAAAA
        AAABHSwfGQFWVlZWVlZWT0NPUFYBHSwfGQEAAAAAAAAAACQcHx8bBk1TUFBTVlZPQ0FHUyQcHx8bBAAA
        AAAAAAAAABUBARMvC0hDQ09TVlNHQ0NPTicBARMICQAAAAAAAAAAOghWVjkIC0BBQ1BTVlNGQUNPVggz
        QTsICQAAAAAAAAA6CFZWVjEIC0BDRlBTVlBGQUNQCDNBQTEICQAAAAAAADoIVlZTUC8IBQENIU9TVlBG
        QUYIM0FBQTIICQAAAAAAOghWVlBHRw4aGQ0NIE9TU1BDQwgzQUFBQS8DAQEnAAA6CFBTU0NBJxoaGQ0B
        NTc5OTcvCC4zMzM0EBoZGQ0nADoIRk9QUEMnGhsaGQEICAgICAgILggICAgBHR8ZGQEAOghDQ09QTzwa
        GhobJ0dDQ0NQUwguQUFBQQEdLB8ZAQA6CEZBQ09PRj0nJylWUE9DQUZPCC5BQUFBJBwfHxsqADoIUEZB
        Q0pQRzQIT1ZWVlBDQUMIM0FBQUE+JwEBGAAAOghWUEZDQ0dPNQhET1JWU1BGQwgzQUFBQUFBQQg6AAA6
        CFZWUEZBQ0c3CEFDT1BWU1BHCDNBQUFBQUFBCDoAABABASdQU09BQTUIR0FDT1NWTSIBASc+QUFBQUEI
        OgAhGhkZDSdWUE9DNQhPR0NDUFYhGhkZDSdBQUFBQQg6AAEdHxkZATsvLy8vLy8vLy8vOQEdHxkZAUFB
        QUFBCDoAAR0sHxkBLwgICAgICAgICAgIAR0sHxkBQUFBQUEIOgAkHB8fGypBQUFBLwhBQUFBQUEkHB8f
        GypBQUFBQQg6AAAnAQETC0FBQUEvCEFBQUFBQT4nAQETDEFBQUFBCDoAAAAAAAsIDEFBQTMIQUFBQUFB
        QUFBQTsvDEFBQUEIOgAAAAAAAAwIDEFBMwhBQUFBQUFBQUFBQTEIDEFBQQg6AAAAAAAAAAwIDEEzCEFB
        QUFBQUFBQUFBQQwIDEFBCDoAAAAAAAAAAAwICw8BASc+QUFBQUFBQUFBQQwIBQEBFQAAAAAAAAAAAAwC
        GhkZDSdBQUFBQUFBQUFBQQUaGRkNJwAAAAAAAAAAAAEdHxkZAUFBQUFBQUFBQUFBAR0fGRkBAAAAAAAA
        AAAAAR0sHxkBLwgICAgICAgICAgBHSwfGQEAAAAAAAAAAAAkHB8fGxg7Ojo6Ojo6Ojo6OhUcHx8bKgAA
        AAAAAAAAAAAnAQErAAAAAAAAAAAAAAAAACcBASsAh//h/wAAAP8AAAD/AAAA/wAAAP+AAAB/gAAAP4AA
        AB+AAAAPgAAAAYAAAACAAAAAgAAAAIAAAACAAAABgAAAAYAAAAGAAAABAAAAAQAAAAEAAAABAAAAAYAA
        AAHwAAAB+AAAAfwAAAH+AAAB/wAAAP+AAAD/gAAA/4AAAP/D/+E=
</value>
  </data>
</root>